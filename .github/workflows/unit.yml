name: Unit tests
on:
  workflow_call:  
jobs:
  unit:
    env:
      PY_COLORS: "1"
      source_directory: "./source"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
        ansible-version:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel

    name: "python ${{ matrix.python-version }} / ansible ${{ matrix.ansible-version }}"
    steps:
      - name: Checkout the collection repository
        uses: actions/checkout@v3
        with:
          path: ${{ env.source_directory }}

      - name: Checkout the github_action repository
        uses: actions/checkout@v3
        with:
          path: ./github_actions
          repository: ansible-network/github_actions
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install ansible-core (${{ matrix.ansible-version }})
        run: python3 -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible-version }}.tar.gz --disable-pip-version-check

      - name: Set the version number in galaxy.yml
        run: 'sed -i "/^version:.*$/c\version: 0.0.${{ github.event.number }}" galaxy.yml'
        working-directory: ${{ env.source_directory }}
      
      - name: Show the galaxy.yml
        run: cat galaxy.yml
        working-directory: ${{ env.source_directory }}

      - name: Identify the collection
        id: collection
        uses: ./github_actions/.github/actions/identify_collection
        with:
          path: ${{ env.source_directory }}/galaxy.yml
      
      - name: Print collected data
        run: echo "${{ toJSON(steps.collection.outputs) }}"

      - name: Install collection python requirements
        run: python3 -m pip install -r requirements.txt -r test-requirements.txt pytest-ansible-units
        working-directory: ${{ env.source_directory }}
      
      - name: Build collection
        run: ansible-galaxy collection build -vvv
        working-directory: ${{ env.source_directory }}

      - name: Installing collection and dependencies
        run: ansible-galaxy collection install ./${{ steps.collection.outputs.tar_file }} -p ${{ steps.collection.outputs.root }}
        working-directory: ${{ env.source_directory }}

      - name: Copy the galaxy.yml from source to tree
        run: cp galaxy.yml ${{ steps.collection.outputs.tree }}/galaxy.yml
        working-directory: ${{ env.source_directory }}

      - name: Print the ansible version
        run: ansible --version

      - name: Print the python dependencies
        run: python3 -m pip list

      - name: Run unit tests
        run: pytest -v
        working-directory: ${{ steps.collection.outputs.tree }}
